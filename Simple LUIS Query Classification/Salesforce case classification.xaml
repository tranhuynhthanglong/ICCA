<Activity mc:Ignorable="sap sap2010" x:Class="Salesforce_case_classification" this:Salesforce_case_classification.ExcelOutput="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usl="clr-namespace:UiPathTeam.Salesforce.Lightning_Platform;assembly=UiPathTeam.Salesforce.Lightning_Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SalesforceUsername" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="SalesforceSecurityToken" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="SalesforcePassword" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="SalesforceConsumerSecret" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="SalesforceConsumerKey" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="ExcelOutput" Type="InArgument(x:Boolean)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="ExcelOutputPath" Type="InArgument(x:String)" />
    <x:Property Name="LUIS_URL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="CaseList" Type="OutArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <this:Salesforce_case_classification.SalesforceUsername>
    <InArgument x:TypeArguments="x:String" />
  </this:Salesforce_case_classification.SalesforceUsername>
  <this:Salesforce_case_classification.SalesforceSecurityToken>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:Salesforce_case_classification.SalesforceSecurityToken>
  <this:Salesforce_case_classification.SalesforcePassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:Salesforce_case_classification.SalesforcePassword>
  <this:Salesforce_case_classification.SalesforceConsumerSecret>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:Salesforce_case_classification.SalesforceConsumerSecret>
  <this:Salesforce_case_classification.SalesforceConsumerKey>
    <InArgument x:TypeArguments="x:String" />
  </this:Salesforce_case_classification.SalesforceConsumerKey>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>654.4,838.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Salesforce case classification_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Salesforce case classification" sap:VirtualizedContainerService.HintSize="614.4,758.4" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="jsonParsing" />
      <Variable x:TypeArguments="x:String" Name="jsonResponse" />
      <Variable x:TypeArguments="sd:DataTable" Name="messages" />
      <Variable x:TypeArguments="x:String" Name="QueryContent" />
      <Variable x:TypeArguments="x:String" Name="TopIntent">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="TopIntentScoring" />
      <Variable x:TypeArguments="x:String" Name="SF_RepAuth" />
      <Variable x:TypeArguments="x:String" Name="SF_RepService" />
      <Variable x:TypeArguments="x:Boolean" Name="SF_ValidConnection" />
      <Variable x:TypeArguments="x:String" Name="rep" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,123.6</av:PointCollection>
        <x:Double x:Key="Height">721.37600000000009</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID7</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">352.8,555.22</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">452.8,608.02 452,608.02 452,634.176</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Seq: Classify cases" sap:VirtualizedContainerService.HintSize="1391.2,2148.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <usl:Salesforce_Application_Scope ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ExistingAuth="{x:Null}" ExistingService="{x:Null}" Password="{x:Null}" SecurityToken="{x:Null}" UserName="{x:Null}" Connection_Status="Close_at_scope_end" ConsumerKeyProd="[SalesforceConsumerKey]" ConsumerSecretProd="[SalesforceConsumerSecret]" DisplayName="Salesforce Application Scope" EnvironmentType="Production" sap:VirtualizedContainerService.HintSize="1368.8,2024" sap2010:WorkflowViewState.IdRef="Salesforce_Application_Scope_4" PasswordProd="[SalesforcePassword]" ResponseAuth="[SF_RepAuth]" ResponseService="[SF_RepService]" SecurityTokenProd="[SalesforceSecurityToken]" ServerType="Live" UserNameProd="[SalesforceUsername]" ValidConnection="[SF_ValidConnection]">
          <usl:Salesforce_Application_Scope.Body>
            <ActivityAction x:TypeArguments="usl:SalesForceProperty">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="usl:SalesForceProperty" Name="SalesForceScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1354.4,1913.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[CaseList]" DisplayName="For Each Row in Salesforce Case List" sap:VirtualizedContainerService.HintSize="1332,1788.8" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1301.6,1640" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1279.2,187.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <TryCatch.Try>
                            <Assign DisplayName="Assign Query sent to LUIS" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[QueryContent]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(row.Item("Description").ToString, "[\r|\n|\t]", " ").Replace("  "," ").Replace("  "," ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="400,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:ArgumentException">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
                                </ActivityAction.Argument>
                                <Assign DisplayName="Assign Query sent to LUIS" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[QueryContent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[row.Item("Description").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <If Condition="[QueryContent.Length&gt;500]" sap:VirtualizedContainerService.HintSize="1279.2,961.6" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="265.6,384.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row.Item("Type")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["N/A"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row.Item("LUIS Scoring")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Too long query"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[TopIntent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <If Condition="[QueryContent.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" sap:VirtualizedContainerService.HintSize="988.8,812" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <If Condition="[row.Item(&quot;Subject&quot;).ToString.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" sap:VirtualizedContainerService.HintSize="627.2,662.4" sap2010:WorkflowViewState.IdRef="If_4">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="265.6,384.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[row.Item("Type")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">["Empty query"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[row.Item("LUIS Scoring")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">["Empty query"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[TopIntent]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Empty query</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="336.8,512.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[QueryContent]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[row.Item("Subject").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="LUIS classification.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="LUIS_URL">[LUIS_URL]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="TopIntent">[TopIntent]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="TopIntentScoring">[TopIntentScoring]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="QueryRequest">[QueryContent]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[row.Item("Type")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[TopIntent]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[row.Item("LUIS Scoring")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[TopIntentScoring]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="336.8,512.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="LUIS classification.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="LUIS_URL">[LUIS_URL]</InArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="TopIntent">[TopIntent]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="TopIntentScoring">[TopIntentScoring]</OutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="QueryRequest">[QueryContent]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[row.Item("Type")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[TopIntent]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[row.Item("LUIS Scoring")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[TopIntentScoring]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[row.Item("Description")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[QueryContent]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                        <Sequence DisplayName="Seq: Touching Salesforce" sap:VirtualizedContainerService.HintSize="1279.2,286.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <usl:Update_Case Result="{x:Null}" ValidConnection="{x:Null}" CaseID="[row.Item(&quot;Id&quot;).ToString]" DisplayName="Update Case" sap:VirtualizedContainerService.HintSize="210.4,59.2" sap2010:WorkflowViewState.IdRef="Update_Case_2" Response="[rep]" SForceAutoAssign="True_Default" cmdTYPE="UpdateCase">
                            <usl:Update_Case.Parameters>
                              <scg:List x:TypeArguments="usl:ParametersArgument" Capacity="4">
                                <usl:ParametersArgument>
                                  <usl:ParametersArgument.Parameter>
                                    <InArgument x:TypeArguments="x:String">Type</InArgument>
                                  </usl:ParametersArgument.Parameter>
                                  <usl:ParametersArgument.ValueData>
                                    <InArgument x:TypeArguments="x:String">[TopIntent]</InArgument>
                                  </usl:ParametersArgument.ValueData>
                                </usl:ParametersArgument>
                              </scg:List>
                            </usl:Update_Case.Parameters>
                          </usl:Update_Case>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="210.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;Salesforce case number &quot; + row.Item(&quot;CaseNumber&quot;).ToString+&quot; is: &quot; + rep]" />
                        </Sequence>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </usl:Salesforce_Application_Scope.Body>
        </usl:Salesforce_Application_Scope>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID4" Condition="[ExcelOutput = TRUE]" DisplayName="Excel" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">416.8,634.176</av:Point>
              <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
              <av:PointCollection x:Key="TrueConnector">416.8,677.776 272,677.776</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">71.9999999999999,651.376</av:Point>
                  <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Seq: Writing to Excel file" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[ExcelOutputPath is nothing orelse ExcelOutputPath.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" sap:VirtualizedContainerService.HintSize="904,508.8" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[ExcelOutputPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Environment.GetFolderPath(Environment.SpecialFolder.Desktop)+"\CaseList "+now().tostring("yyyy-MM-d HH")+"h"+now().tostring("mm")+"m"+now().tostring("ss")+"s"+".xlsx"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <If Condition="[ExcelOutputPath.Substring(ExcelOutputPath.Length-4)=&quot;xlsx&quot;]" sap:VirtualizedContainerService.HintSize="636,359.2" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Else>
                        <If Condition="[ExcelOutputPath.Substring(ExcelOutputPath.Length-1)=&quot;\&quot;]" sap:VirtualizedContainerService.HintSize="511.2,209.6" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExcelOutputPath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ExcelOutputPath+"CaseList "+now().tostring("yyyy-MM-d HH")+"h"+now().tostring("mm")+"m"+now().tostring("ss")+"s"+".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExcelOutputPath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ExcelOutputPath+"\CaseList "+now().tostring("yyyy-MM-d HH")+"h"+now().tostring("mm")+"m"+now().tostring("ss")+"s"+".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
                <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="904,22.4" sap2010:WorkflowViewState.IdRef="AddLogFields_9">
                  <ui:AddLogFields.Fields>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:AddLogFields.Fields>
                </ui:AddLogFields>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="904,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Writing to excel file...&quot;]" />
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Write Data to Excel" sap:VirtualizedContainerService.HintSize="904,322.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="[ExcelOutputPath]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336.8,212.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[CaseList]" DisplayName="Write total range" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <bes:AutoFitColumns ColumnWidth="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" AutoFit="True" ColumnsRange="[{&quot;C:C,F:F,G:G,J:J&quot;}]" DisplayName="AutoFit Columns" FilePath="[ExcelOutputPath]" sap:VirtualizedContainerService.HintSize="904,69.6" sap2010:WorkflowViewState.IdRef="AutoFitColumns_4" SheetName="Sheet1" />
                <bes:AutoFitColumns FilePassword="{x:Null}" ModifyPassword="{x:Null}" AutoFit="False" ColumnWidth="20" ColumnsRange="[{&quot;D:D&quot;}]" DisplayName="Set column width" FilePath="[ExcelOutputPath]" sap:VirtualizedContainerService.HintSize="904,69.6" sap2010:WorkflowViewState.IdRef="AutoFitColumns_5" SheetName="Sheet1" />
                <bes:AutoFitColumns FilePassword="{x:Null}" ModifyPassword="{x:Null}" AutoFit="False" ColumnWidth="80" ColumnsRange="[{&quot;E:E&quot;}]" DisplayName="Set column width" FilePath="[ExcelOutputPath]" sap:VirtualizedContainerService.HintSize="904,69.6" sap2010:WorkflowViewState.IdRef="AutoFitColumns_6" SheetName="Sheet1" />
                <bes:FormatCells FilePassword="{x:Null}" ModifyPassword="{x:Null}" CellRange="[{&quot;D:E&quot;}]" DisplayName="Format Collumns" FilePath="[ExcelOutputPath]" sap:VirtualizedContainerService.HintSize="904,69.6" Horizontal="Select" sap2010:WorkflowViewState.IdRef="FormatCells_2" Indent="0" MergeCells="Select" OrientationDeg="0" SheetName="Sheet1" ShrinkFit="Select" TextDirection="Select" Verticle="Select" WrapText="True" />
                <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="904,22.4" sap2010:WorkflowViewState.IdRef="AddLogFields_10">
                  <ui:AddLogFields.Fields>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:AddLogFields.Fields>
                </ui:AddLogFields>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="904,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Finish writing to excel file.&quot;]" />
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">52.8,455.64</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Seq: No unclassified case" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
          <ui:AddLogFields.Fields>
            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
          </ui:AddLogFields.Fields>
        </ui:AddLogFields>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;No unclassified case, ending the execution...&quot;]" />
      </Sequence>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID3" Condition="[CaseList Is Nothing OrElse CaseList.Rows.Count = 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">263.441666666667,338.12</av:Point>
          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
          <av:PointCollection x:Key="FalseConnector">342.641666666667,381.72 452.8,381.72 452.8,455.64</av:PointCollection>
          <av:PointCollection x:Key="TrueConnector">263.441666666667,381.72 152.8,381.72 152.8,455.64</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.False>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">352.8,455.64</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">452.8,508.44 452.8,555.22</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Seq: Preparing datatable" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="LUIS Scoring" DataTable="[CaseList]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="-1" Unique="False" />
            <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
              <ui:AddLogFields.Fields>
                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
              </ui:AddLogFields.Fields>
            </ui:AddLogFields>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Start sending queries to LUIS and updating to Salesforce...&quot;]" />
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID1</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID2</x:Reference>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">202.8,245.64</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">302.8,298.44 302.8,328.44 303.041666666667,328.44 303.041666666667,338.12</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Seq: Get Salesforce case list" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <usl:Salesforce_Application_Scope ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ExistingAuth="{x:Null}" ExistingService="{x:Null}" Password="{x:Null}" SecurityToken="{x:Null}" UserName="{x:Null}" Connection_Status="Close_at_scope_end" ConsumerKeyProd="[SalesforceConsumerKey]" ConsumerSecretProd="[SalesforceConsumerSecret]" DisplayName="Salesforce Application Scope" EnvironmentType="Production" sap:VirtualizedContainerService.HintSize="414.4,489.6" sap2010:WorkflowViewState.IdRef="Salesforce_Application_Scope_2" PasswordProd="[SalesforcePassword]" ResponseAuth="[SF_RepAuth]" ResponseService="[SF_RepService]" SecurityTokenProd="[SalesforceSecurityToken]" ServerType="Live" UserNameProd="[SalesforceUsername]" ValidConnection="[SF_ValidConnection]">
          <usl:Salesforce_Application_Scope.Body>
            <ActivityAction x:TypeArguments="usl:SalesForceProperty">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="usl:SalesForceProperty" Name="SalesForceScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336.8,379.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
                  <ui:AddLogFields.Fields>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:AddLogFields.Fields>
                </ui:AddLogFields>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Start getting case list from Salesforce...&quot;]" />
                <usl:Get_Case_List Response="{x:Null}" Result="{x:Null}" ValidConnection="{x:Null}" DataResult="[CaseList]" DisplayName="Get Case List" sap:VirtualizedContainerService.HintSize="314.4,59.2" sap2010:WorkflowViewState.IdRef="Get_Case_List_2" Search="SELECT Id,CaseNumber,Origin,Subject,Description,Type,Status,SuppliedEmail,CreatedDate FROM Case Where Status='New' AND Type='' ORDER BY CaseNumber Asc " />
              </Sequence>
            </ActivityAction>
          </usl:Salesforce_Application_Scope.Body>
        </usl:Salesforce_Application_Scope>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID3</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <FlowStep x:Name="__ReferenceID7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,123.6</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,176.4 300,206.4 302.8,206.4 302.8,245.64</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Seq: input check" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[SalesforceUsername is Nothing ORELSE SalesforceUsername.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="SF username check" sap:VirtualizedContainerService.HintSize="688.8,359.2" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Then>
            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="No Salesforce username is provided." />
          </If.Then>
          <If.Else>
            <If Condition="[new System.Net.NetworkCredential(string.Empty, SalesforcePassword).Password is Nothing ORELSE new System.Net.NetworkCredential(string.Empty, SalesforcePassword).Password.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="SF password check" sap:VirtualizedContainerService.HintSize="464,209.6" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="No Salesforce password is provided." />
              </If.Then>
            </If>
          </If.Else>
        </If>
        <If Condition="[SalesforceConsumerKey is Nothing ORELSE SalesforceConsumerKey.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="SF consumer key check" sap:VirtualizedContainerService.HintSize="688.8,359.2" sap2010:WorkflowViewState.IdRef="If_13">
          <If.Then>
            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="No Salesforce Consumer Key is provided." />
          </If.Then>
          <If.Else>
            <If Condition="[new System.Net.NetworkCredential(string.Empty, SalesforceConsumerSecret).Password is Nothing ORELSE new System.Net.NetworkCredential(string.Empty, SalesforceConsumerSecret).Password.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="SF consumer secret check" sap:VirtualizedContainerService.HintSize="464,209.6" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="No Salesforce Consumer Secret is provided." />
              </If.Then>
            </If>
          </If.Else>
        </If>
        <If Condition="[new System.Net.NetworkCredential(string.Empty, SalesforceSecurityToken).Password is Nothing ORELSE new System.Net.NetworkCredential(string.Empty, SalesforceSecurityToken).Password.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="SF security token check" sap:VirtualizedContainerService.HintSize="688.8,209.6" sap2010:WorkflowViewState.IdRef="If_14">
          <If.Then>
            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" Reason="No Salesforce security token is provided." />
          </If.Then>
        </If>
        <If Condition="[LUIS_URL is Nothing ORELSE LUIS_URL.Replace(&quot; &quot;,&quot;&quot;)=&quot;&quot;]" DisplayName="LUIS URL check" sap:VirtualizedContainerService.HintSize="688.8,209.6" sap2010:WorkflowViewState.IdRef="If_15">
          <If.Then>
            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_6" Reason="No LUIS Endpoint URL is provided." />
          </If.Then>
        </If>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID6</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>